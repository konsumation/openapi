{
  "openapi": "3.0.3",
  "servers": [
    {
      "url": "https://mydomain.com"
    }
  ],
  "info": {
    "title": "Collect resource usage in a home environment",
    "version": "0.0.0-semantic-release",
    "license": {
      "name": "MIT",
      "url": "https://github.com/konsumation/openapi/LICENSE"
    }
  },
  "paths": {
    "/admin/token": {
      "post": {
        "tags": ["admin"],
        "summary": "Create token.",
        "operationId": "createToken",
        "description": "Create token.",
        "responses": {
          "200": {
            "description": "token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.admin.token"]
          }
        ]
      }
    },
    "/admin/stop": {
      "post": {
        "tags": ["admin"],
        "summary": "Stop the service.",
        "operationId": "stopServer",
        "description": "Stop konsum server.",
        "responses": {
          "200": {
            "description": "Progress message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.admin.stop"]
          }
        ]
      }
    },
    "/admin/reload": {
      "post": {
        "tags": ["admin"],
        "summary": "Reload config.",
        "operationId": "reloadConfig",
        "description": "Reload konsum config.",
        "responses": {
          "200": {
            "description": "Progress message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.admin.reload"]
          }
        ]
      }
    },
    "/admin/backup": {
      "post": {
        "tags": ["admin"],
        "summary": "Create backup on server.",
        "operationId": "backupDataOnServer",
        "description": "Create backup on server.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.admin.backup"]
          }
        ]
      },
      "get": {
        "tags": ["admin"],
        "summary": "Create backup.",
        "operationId": "backupData",
        "description": "Create backup.",
        "responses": {
          "200": {
            "description": "Backup data as text.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.admin.backup"]
          }
        ]
      }
    },
    "/state": {
      "get": {
        "summary": "Service status report.",
        "operationId": "getServiceState",
        "description": "Retrieve service state.",
        "responses": {
          "200": {
            "description": "Service state.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/authenticate": {
      "post": {
        "tags": ["authenticate"],
        "summary": "User login.",
        "operationId": "authenticate",
        "description": "Login to request api token.",
        "externalDocs": {
          "description": "OAuth response",
          "url": "https://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-4.2.2"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token generated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/category": {
      "get": {
        "tags": ["category"],
        "operationId": "getCategories",
        "summary": "Retrieve list of categories.",
        "responses": {
          "200": {
            "description": "A list of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.category"]
          }
        ]
      }
    },
    "/category/{category}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        }
      ],
      "get": {
        "tags": ["category"],
        "operationId": "getCategory",
        "summary": "Retrieve a category.",
        "responses": {
          "200": {
            "description": "One category.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.category"]
          }
        ]
      },
      "put": {
        "tags": ["category"],
        "summary": "Add a category.",
        "operationId": "addCategory",
        "description": "Add a new category.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success message.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.category.add"]
          }
        ]
      },
      "post": {
        "tags": ["category"],
        "summary": "Alter a category.",
        "operationId": "updateCategory",
        "description": "Update a category.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.modify"]
          }
        ]
      },
      "delete": {
        "tags": ["category"],
        "summary": "Delete a category.",
        "operationId": "deleteCategory",
        "description": "Delete a category.",
        "responses": {
          "200": {
            "description": "success message.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.category.delete"]
          }
        ]
      }
    },
    "/category/{category}/value": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limits the number of entries delivered.",
          "required": false,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "reverse",
          "in": "query",
          "description": "Reverses the order in which the entries are delivered.",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "get": {
        "tags": ["value"],
        "summary": "Get values of a category.",
        "operationId": "getCategoryValues",
        "description": "List values of a category.",
        "responses": {
          "200": {
            "description": "Value list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Value"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          },
          "406": {
            "description": "Unsupported content-type.",
            "content": {
              "text": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value"]
          }
        ]
      }
    },
    "/category/{category}/value/{date}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "date",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Date"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limits the number of entries delivered.",
          "required": false,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "reverse",
          "in": "query",
          "description": "Reverses the order in which the entries are delivered.",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "get": {
        "tags": ["value"],
        "summary": "Get a value from a category.",
        "operationId": "getCategoryValue",
        "description": "One value of a category.",
        "responses": {
          "200": {
            "description": "Value list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          },
          "406": {
            "description": "Unsupported content-type.",
            "content": {
              "text": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value"]
          }
        ]
      },
      "put": {
        "tags": ["value"],
        "summary": "Add values to a category.",
        "operationId": "insertCategoryValues",
        "description": "Insert a value into a category.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value.add"]
          }
        ]
      },
      "delete": {
        "tags": ["value"],
        "summary": "Delete values from a category.",
        "operationId": "deleteCategoryValues",
        "description": "Delete a value from a category.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value.delete"]
          }
        ]
      }
    },
    "/category/{category}/note": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        }
      ],
      "get": {
        "tags": ["note"],
        "summary": "List notes of a category.",
        "operationId": "getCategoryNotes",
        "description": "List notes of a category.",
        "responses": {
          "200": {
            "description": "List of notes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note"]
          }
        ]
      }
    },
    "/category/{category}/note/{note}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "note",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NoteName"
          }
        }
      ],
      "get": {
        "tags": ["note"],
        "summary": "Get a note of a category.",
        "operationId": "getCategoryNote",
        "description": "One note of a category.",
        "responses": {
          "200": {
            "description": "One note.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or note error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrNoteMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note"]
          }
        ]
      },
      "put": {
        "tags": ["note"],
        "summary": "Add a note to a meter.",
        "operationId": "addCategoryNote",
        "description": "add a note to a meter.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or note error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrNoteMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.add"]
          }
        ]
      },
      "post": {
        "tags": ["note"],
        "summary": "Add a note to a meter.",
        "operationId": "updateCategoryNote",
        "description": "Update a note.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or note error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrNoteMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.modify"]
          }
        ]
      },
      "delete": {
        "tags": ["note"],
        "summary": "Delete a note from a category.",
        "operationId": "deleteCategoryNote",
        "description": "Delete a note.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or note error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrNoteMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.delete"]
          }
        ]
      }
    },
    "/category/{category}/meter": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        }
      ],
      "get": {
        "tags": ["meter"],
        "summary": "List meters of a category.",
        "operationId": "getCategoryMeters",
        "description": "List meters of a category.",
        "responses": {
          "200": {
            "description": "List of meters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meter"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.meter"]
          }
        ]
      }
    },
    "/category/{category}/meter/{meter}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "meter",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MeterName"
          }
        }
      ],
      "put": {
        "tags": ["meter"],
        "summary": "Add a meter to a category.",
        "operationId": "addCategoryMeter",
        "description": "Add a meter to a category.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Meter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.meter.add"]
          }
        ]
      },
      "post": {
        "tags": ["meter"],
        "summary": "Update a meter of a category.",
        "operationId": "updateCategoryMeter",
        "description": "Update a meter.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Meter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.meter.modify"]
          }
        ]
      },
      "delete": {
        "tags": ["meter"],
        "summary": "Delete a meter from a category.",
        "operationId": "deleteCategoryMeter",
        "description": "Delete a meter.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.meter.delete"]
          }
        ]
      }
    },
    "/category/{category}/meter/{meter}/value": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "meter",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MeterName"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limits the number of entries delivered.",
          "required": false,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "reverse",
          "in": "query",
          "description": "Reverses the order in which the entries are delivered.",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "get": {
        "tags": ["value"],
        "summary": "Get values of a meter.",
        "operationId": "getMeterValues",
        "description": "List values of a meter.",
        "responses": {
          "200": {
            "description": "Value list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Value"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          },
          "406": {
            "description": "Unsupported content-type.",
            "content": {
              "text": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value"]
          }
        ]
      }
    },
    "/category/{category}/meter/{meter}/value/{date}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "meter",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MeterName"
          }
        },
        {
          "name": "date",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Date"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limits the number of entries delivered.",
          "required": false,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "reverse",
          "in": "query",
          "description": "Reverses the order in which the entries are delivered.",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "get": {
        "tags": ["value"],
        "summary": "Get values of a meter.",
        "operationId": "getMeterValue",
        "description": "One value of a meter.",
        "responses": {
          "200": {
            "description": "Value list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          },
          "406": {
            "description": "Unsupported content-type.",
            "content": {
              "text": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value"]
          }
        ]
      },
      "put": {
        "tags": ["value"],
        "summary": "Add values to a meter.",
        "operationId": "insertMeterValues",
        "description": "Insert a value into a meter.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value.add"]
          }
        ]
      },
      "delete": {
        "tags": ["value"],
        "summary": "Delete values from a meter.",
        "operationId": "deleteMeterValues",
        "description": "Delete a value from a meter.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {},
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.value.delete"]
          }
        ]
      }
    },
    "/category/{category}/meter/{meter}/note": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "meter",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MeterName"
          }
        }
      ],
      "get": {
        "tags": ["note"],
        "summary": "List notes of a meter.",
        "operationId": "getMeterNotes",
        "description": "List notes of a meter.",
        "responses": {
          "200": {
            "description": "List of notes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note"]
          }
        ]
      }
    },
    "/category/{category}/meter/{meter}/note/{note}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CategoryName"
          }
        },
        {
          "name": "meter",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MeterName"
          }
        },
        {
          "name": "note",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NoteName"
          }
        }
      ],
      "put": {
        "tags": ["note"],
        "summary": "Add a note to a meter.",
        "operationId": "addMeterNote",
        "description": "Add a note to a meter.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.add"]
          }
        ]
      },
      "post": {
        "tags": ["note"],
        "summary": "Update a note.",
        "operationId": "updateNote",
        "description": "Update a note.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.modify"]
          }
        ]
      },
      "delete": {
        "tags": ["note"],
        "summary": "Delete a note from a meter.",
        "operationId": "deleteMeterNote",
        "description": "Delete a note.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "404": {
            "description": "No such category or meter error message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchCategoryOrMeterMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "konsum_auth": ["konsum.note.delete"]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "konsum_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CategoryName": {
        "description": "Category name.",
        "type": "string"
      },
      "Category": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category."
          },
          "description": {
            "type": "string",
            "description": "The human readable description of your category."
          },
          "unit": {
            "type": "string",
            "description": "The physical measurment unit."
          },
          "fractionalDigits": {
            "type": "number",
            "description": "decimal precission.",
            "default": 2
          },
          "order": {
            "type": "number",
            "description": "sorting order higher nuber come first."
          }
        },
        "example": {
          "name": "EV",
          "description": "mains power",
          "unit": "m3",
          "fractionalDigits": 3,
          "order": 1
        }
      },
      "MeterName": {
        "description": "Meter name.",
        "type": "string"
      },
      "Meter": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the meter."
          },
          "description": {
            "type": "string",
            "description": "The human readable description of your meter."
          },
          "unit": {
            "type": "string",
            "description": "The physical measurment unit."
          },
          "fractionalDigits": {
            "type": "number",
            "description": "decimal precission.",
            "default": 2
          },
          "serial": {
            "type": "string",
            "description": "The serial number of the meter."
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "description": "date + time when this meter becomes valid."
          }
        },
        "example": {
          "name": "EV-2020",
          "serial": "123",
          "validFrom": "2011-10-05T14:48:00.000Z",
          "description": "new meter from utility provider"
        }
      },
      "NoteName": {
        "description": "Note identifier.",
        "type": "string"
      },
      "Note": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category."
          },
          "description": {
            "type": "string",
            "description": "The human readable description of your category."
          }
        },
        "example": {
          "name": "2011-10-05T14:48:00.000Z",
          "description": "power outage"
        }
      },
      "Date": {
        "type": "string",
        "format": "date-time",
        "description": "Date time"
      },
      "Value": {
        "type": "object",
        "required": ["date", "value"],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "date + time when the value was present"
          },
          "value": {
            "type": "number",
            "description": "physical value on the meter"
          }
        }
      },
      "State": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "The software version of the server."
          },
          "database": {
            "type": "object",
            "description": "details of the database."
          },
          "uptime": {
            "type": "number",
            "description": "The duration the sever is up and running."
          },
          "memory": {
            "type": "object",
            "description": "The memory usage of the server."
          }
        }
      },
      "AuthRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["username", "password"]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token issued."
          },
          "token_type": {
            "type": "string",
            "enum": ["bearer"],
            "description": "The type of the token issued. Value is case insensitive."
          },
          "refresh_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "description": "The lifetime in seconds of the access token. For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated."
          },
          "scope": {
            "type": "string"
          }
        },
        "required": ["token_type", "access_token"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "NoSuchCategoryMessage": {
        "type": "string"
      },
      "NoSuchCategoryOrMeterMessage": {
        "type": "string"
      },
      "NoSuchCategoryOrNoteMessage": {
        "type": "string"
      },
      "TextOnlyMessage": {
        "type": "string"
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The access token issued."
          }
        }
      }
    }
  },
  "tags": []
}
